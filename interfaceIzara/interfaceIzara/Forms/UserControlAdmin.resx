<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAABElJREFUWEfN2CFsHEkQBdBIhiFGISFGgSEhRqEmUVCoWaDBKexYSGBoSFh4yNFj
        IQcPHjsWFBJy0oGTfP+Np0Y9s727s7ZlbUtfM1NdXf27uqq6dx9d/PLqqNEVHhO6wrW4vr5+HDwLzhv4
        ftzTvw26wm3IxCcjgbfBl+CP4HvwTwPfvwcfg4vgtGdrLbrCJTIJYi8DpBCo9l/wI/g7+Gt8/gyq/Rt8
        Cy6DW3m1K2wRw2fBp6Am9vwt+DXgoefB0+DJ+PT9JjAGYc1CjHnRm2MXusJCDPLan4GGmEnF2SpvRM/i
        LKS8jvDrnu42dIUQQ7xTHkDS90lPdx8yzqLEpSYk3vT0eugKY8A2iSmN4Wc9vUMQG7b/K4NpPHre01ti
        Q5CBSkcZkqV3JleILSQljWbhezN8Q5BBAlz2ibmLZf9dEZvi2jZLnLc9nRazjwzgPdmmKSm3irldYDOQ
        bBpv7ky42UeUFWHxYXWrA/lQxLaEU9Tt0lB68jyFpe7sIwoGIofkFHsGBortVfB0MUafk0Xfk0Wf2kiu
        f5o872KxkvBylNVBMLM/vQDlQDN4mizvJkFc+xxMW593da7ax5KPfR9uxEN738iFkgTU3o2yco4EnRYz
        GRuViqC61xJ8N0hv2iw28/5+kN60TyUf+5zH1T40cgQrm4ugWil5NDaHOSZjo9LrwCoU6LNGbhuR5JFZ
        2cm3beRFRqcxY5+ThFz/tHV5N6ZOqNpiyVO7gehQJydjo5ICrVMAv2z77hPNPJJkKth5R7y2XqafLAfy
        VClMMXPfiG0xrZlrlrn5rj55cDYbOCpUTA0Ky/67IjZbL204IbJ2Fy9mnaOCWliXBEF+r8U69irOOGDj
        GI3MAqoEXc06GyUJIVmsYu9xtBax5RjlHbavtugIs0qgrQSVAeVEY1D5ubUnjQ0U67oXSoDuERd5edAi
        LjcUCqNi3Wpk21AODkHGIPYiUNxdQDTvW28x6aNvPo457yoVooBkFdS20JpYjQM6toXXPR1jJqkfVibS
        PMXfzsvBqKOZ97SrVIgCIuXFIePyREDBlki2zHaIGZkJvnmgGmKI7r2gRseCp/gj6yoWooRgXb9ktCAv
        AyZGEBnJJGbqHol8/bDizb3xSyeoa5iFDkdtV7kQpZYgQgh4IqteWTECzlGHvRsJOS+vTiq6gcpR9qeL
        8oZyi3FgEeQZAb7KI2sRW+LW4YDcRlmbKS8RZQTFjzjknYlY3usigPTwc7QduwbGBPVrT7hIrNniZwOW
        oBx0/2sZ+9x+qurbmoFosPZ3c8WcuO5eTjYEhyKGeVJMVhEWCkoEz9ZVS9aXp6d/F0aZNrtHtugKD0Um
        4E3JgRBylVBt8y3TLQRp9fNhCLbIZAq2sBCzyhIIBVvv3QIQ9ayS9XAEdyFEeFrWuvNV7GrHQbBFSPGy
        2BQOn3s60BU+JELO1m/9x6srPCZ0hceErvB48OrR/5zwb9H++5EoAAAAAElFTkSuQmCC
</value>
  </data>
</root>